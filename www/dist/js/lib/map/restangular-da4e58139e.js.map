{"version":3,"sources":["restangular-da4e58139e.js"],"names":["restangular","angular","module","provider","Configurer","init","object","config","RestangularResource","$http","url","configurer","resource","_","each","keys","key","value","params","extend","defaultRequestParams","method","toLowerCase","isEmpty","isSafe","data","configuration","safeMethods","operation","includes","absolutePattern","isAbsoluteUrl","string","isUndefined","absoluteUrl","isNull","test","setSelfLinkAbsoluteUrl","baseUrl","setBaseUrl","newBaseUrl","substring","length","this","extraFields","setExtraFields","newExtraFields","defaultHttpFields","setDefaultHttpFields","values","withHttpValues","httpLocalConfig","obj","defaults","encodeIds","setEncodeIds","encode","get","post","put","remove","common","setDefaultRequestParams","param1","param2","methods","push","isArray","requestParams","defaultHeaders","setDefaultHeaders","headers","methodOverriders","setMethodOverriders","overriders","isOverridenMethod","jsonp","setJsonp","active","search","find","one","urlCreator","setUrlCreator","name","has","urlCreatorFactory","Error","restangularFields","id","route","parentResource","restangularCollection","cannonicalId","etag","selfLink","getList","head","trace","options","patch","getRestangularUrl","getRequestedUrl","putElement","addRestangularMethod","getParentList","clone","ids","httpConfig","reqParams","all","several","oneUrl","allUrl","customPUT","customPOST","customDELETE","customGET","customGETLIST","customOperation","doPUT","doPOST","doDELETE","doGET","doGETLIST","fromServer","withConfig","withHttpConfig","singleOne","plain","save","restangularized","setRestangularFields","resFields","isRestangularized","setFieldToElem","field","elem","properties","split","idValue","initial","prop","last","getFieldFromElem","copy","setIdToElem","getIdFromElem","isValidId","elemId","setUrlToElem","getUrlFromElem","useCannonicalId","setUseCannonicalId","getCannonicalIdFromElem","actualId","responseInterceptors","defaultResponseInterceptor","responseExtractor","what","response","deferred","interceptors","theData","interceptor","addResponseInterceptor","extractor","errorInterceptors","addErrorInterceptor","setResponseInterceptor","setResponseExtractor","setErrorInterceptor","requestInterceptors","defaultInterceptor","element","path","fullRequestInterceptor","defaultRequest","reduce","request","addRequestInterceptor","setRequestInterceptor","addFullRequestInterceptor","setFullRequestInterceptor","onBeforeElemRestangularized","setOnBeforeElemRestangularized","setRestangularizePromiseInterceptor","restangularizePromiseInterceptor","onElemRestangularized","setOnElemRestangularized","shouldSaveParent","setParentless","isBoolean","suffix","setRequestSuffix","newSuffix","transformers","addElementTransformer","type","secondArg","thirdArg","isCollection","transformer","arguments","typeTransformers","coll","extendCollection","fn","extendModel","transformElem","Restangular","force","transformLocalElements","changedElem","setTransformOnlyServerElements","fullResponse","setFullResponse","full","BaseCreator","prototype","setConfig","parentsArray","current","parents","reverse","localHttpConfig","callHeaders","callParams","base","add","indexOf","undefined","Path","normalizeUrl","parts","exec","replace","__this","acum","elemUrl","elemSelfLink","join","encodeURIComponent","fetchUrl","fetchRequestedUrl","sortedKeys","hasOwnProperty","sort","forEachSorted","iterator","context","i","call","encodeUriQuery","val","pctEncodeSpaces","forEach","v","isObject","toJson","globalConfiguration","$get","$q","createServiceForConfiguration","restangularizeBase","parent","bind","urlHandler","addRestangularMethodFunction","copyRestangularizedElement","stripRestangular","parentId","parentUrl","restangularFieldsForParent","union","pick","error","isNumber","restangularizeElem","restangularizeCollection","collection","Array","splice","restangularizePromise","promise","valueToFill","promiseCall","promiseGet","$object","defer","callArgs","filledValue","then","slice","func","apply","resolve","resolvePromise","array","omit","addCustomOperation","customFunction","oper","alias","callFunction","callOperation","toUpperCase","fetchFunction","fromElement","toElement","copiedElement","localElem","getFunction","putFunction","postFunction","deleteFunction","headFunction","traceFunction","optionsFunction","patchFunction","service","putElementFunction","getById","restangularizeCollectionAndElements","toString","idx","elemToPut","filledArray","serverElem","newArray","reject","parseResponse","resData","whatFetched","okCallback","fullParams","processedData","map","status","every","cb","elemFunction","resParams","callObj","filledObject","errorCallback","isOverrideOperation","X-HTTP-Method-Override","defaultParams","defaultElem","bindedFunction","createdFunction","withConfigurationFunction","newConfig","toService","knownCollectionMethods","serv","isFunction","restangularizeElement"],"mappings":"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","file":"../restangular-da4e58139e.js","sourcesContent":["/**\r\n * Restful Resources service for AngularJS apps\r\n * @version v1.5.2 - 2016-02-08 * @link https://github.com/mgonto/restangular\r\n * @author Martin Gontovnikas <martin@gon.to>\r\n * @license MIT License, http://www.opensource.org/licenses/MIT\r\n */(function() {\r\n\r\nvar restangular = angular.module('restangular', []);\r\n\r\nrestangular.provider('Restangular', function() {\r\n  // Configuration\r\n  var Configurer = {};\r\n  Configurer.init = function(object, config) {\r\n    object.configuration = config;\r\n\r\n    /**\r\n     * Those are HTTP safe methods for which there is no need to pass any data with the request.\r\n     */\r\n    var safeMethods= ['get', 'head', 'options', 'trace', 'getlist'];\r\n    config.isSafe = function(operation) {\r\n      return _.includes(safeMethods, operation.toLowerCase());\r\n    };\r\n\r\n    var absolutePattern = /^https?:\\/\\//i;\r\n    config.isAbsoluteUrl = function(string) {\r\n      return _.isUndefined(config.absoluteUrl) || _.isNull(config.absoluteUrl) ?\r\n              string && absolutePattern.test(string) :\r\n              config.absoluteUrl;\r\n    };\r\n\r\n    config.absoluteUrl = _.isUndefined(config.absoluteUrl) ? true : config.absoluteUrl;\r\n    object.setSelfLinkAbsoluteUrl = function(value) {\r\n      config.absoluteUrl = value;\r\n    };\r\n    /**\r\n     * This is the BaseURL to be used with Restangular\r\n     */\r\n    config.baseUrl = _.isUndefined(config.baseUrl) ? '' : config.baseUrl;\r\n    object.setBaseUrl = function(newBaseUrl) {\r\n      config.baseUrl = /\\/$/.test(newBaseUrl) ?\r\n        newBaseUrl.substring(0, newBaseUrl.length-1) :\r\n        newBaseUrl;\r\n      return this;\r\n    };\r\n\r\n    /**\r\n     * Sets the extra fields to keep from the parents\r\n     */\r\n    config.extraFields = config.extraFields || [];\r\n    object.setExtraFields = function(newExtraFields) {\r\n      config.extraFields = newExtraFields;\r\n      return this;\r\n    };\r\n\r\n    /**\r\n     * Some default $http parameter to be used in EVERY call\r\n    **/\r\n    config.defaultHttpFields = config.defaultHttpFields || {};\r\n    object.setDefaultHttpFields = function(values) {\r\n      config.defaultHttpFields = values;\r\n      return this;\r\n    };\r\n\r\n    config.withHttpValues = function(httpLocalConfig, obj) {\r\n      return _.defaults(obj, httpLocalConfig, config.defaultHttpFields);\r\n    };\r\n\r\n    config.encodeIds = _.isUndefined(config.encodeIds) ? true : config.encodeIds;\r\n    object.setEncodeIds = function(encode) {\r\n      config.encodeIds = encode;\r\n    };\r\n\r\n    config.defaultRequestParams = config.defaultRequestParams || {\r\n      get: {},\r\n      post: {},\r\n      put: {},\r\n      remove: {},\r\n      common: {}\r\n    };\r\n\r\n    object.setDefaultRequestParams = function(param1, param2) {\r\n      var methods = [],\r\n          params = param2 || param1;\r\n      if (!_.isUndefined(param2)) {\r\n        if (_.isArray(param1)) {\r\n          methods = param1;\r\n        } else {\r\n          methods.push(param1);\r\n        }\r\n      } else {\r\n        methods.push('common');\r\n      }\r\n\r\n      _.each(methods, function (method) {\r\n        config.defaultRequestParams[method] = params;\r\n      });\r\n      return this;\r\n    };\r\n\r\n    object.requestParams = config.defaultRequestParams;\r\n\r\n    config.defaultHeaders = config.defaultHeaders || {};\r\n    object.setDefaultHeaders = function(headers) {\r\n      config.defaultHeaders = headers;\r\n      object.defaultHeaders = config.defaultHeaders;\r\n      return this;\r\n    };\r\n\r\n    object.defaultHeaders = config.defaultHeaders;\r\n\r\n    /**\r\n     * Method overriders will set which methods are sent via POST with an X-HTTP-Method-Override\r\n     **/\r\n    config.methodOverriders = config.methodOverriders || [];\r\n    object.setMethodOverriders = function(values) {\r\n      var overriders = _.extend([], values);\r\n      if (config.isOverridenMethod('delete', overriders)) {\r\n        overriders.push('remove');\r\n      }\r\n      config.methodOverriders = overriders;\r\n      return this;\r\n    };\r\n\r\n    config.jsonp = _.isUndefined(config.jsonp) ? false : config.jsonp;\r\n    object.setJsonp = function(active) {\r\n      config.jsonp = active;\r\n    };\r\n\r\n    config.isOverridenMethod = function(method, values) {\r\n      var search = values || config.methodOverriders;\r\n      return !_.isUndefined(_.find(search, function(one) {\r\n        return one.toLowerCase() === method.toLowerCase();\r\n      }));\r\n    };\r\n\r\n    /**\r\n     * Sets the URL creator type. For now, only Path is created. In the future we'll have queryParams\r\n    **/\r\n    config.urlCreator = config.urlCreator || 'path';\r\n    object.setUrlCreator = function(name) {\r\n      if (!_.has(config.urlCreatorFactory, name)) {\r\n        throw new Error('URL Path selected isn\\'t valid');\r\n      }\r\n\r\n      config.urlCreator = name;\r\n      return this;\r\n    };\r\n\r\n    /**\r\n     * You can set the restangular fields here. The 3 required fields for Restangular are:\r\n     *\r\n     * id: Id of the element\r\n     * route: name of the route of this element\r\n     * parentResource: the reference to the parent resource\r\n     *\r\n     *  All of this fields except for id, are handled (and created) by Restangular. By default,\r\n     *  the field values will be id, route and parentResource respectively\r\n     */\r\n    config.restangularFields = config.restangularFields || {\r\n      id: 'id',\r\n      route: 'route',\r\n      parentResource: 'parentResource',\r\n      restangularCollection: 'restangularCollection',\r\n      cannonicalId: '__cannonicalId',\r\n      etag: 'restangularEtag',\r\n      selfLink: 'href',\r\n      get: 'get',\r\n      getList: 'getList',\r\n      put: 'put',\r\n      post: 'post',\r\n      remove: 'remove',\r\n      head: 'head',\r\n      trace: 'trace',\r\n      options: 'options',\r\n      patch: 'patch',\r\n      getRestangularUrl: 'getRestangularUrl',\r\n      getRequestedUrl: 'getRequestedUrl',\r\n      putElement: 'putElement',\r\n      addRestangularMethod: 'addRestangularMethod',\r\n      getParentList: 'getParentList',\r\n      clone: 'clone',\r\n      ids: 'ids',\r\n      httpConfig: '_$httpConfig',\r\n      reqParams: 'reqParams',\r\n      one: 'one',\r\n      all: 'all',\r\n      several: 'several',\r\n      oneUrl: 'oneUrl',\r\n      allUrl: 'allUrl',\r\n      customPUT: 'customPUT',\r\n      customPOST: 'customPOST',\r\n      customDELETE: 'customDELETE',\r\n      customGET: 'customGET',\r\n      customGETLIST: 'customGETLIST',\r\n      customOperation: 'customOperation',\r\n      doPUT: 'doPUT',\r\n      doPOST: 'doPOST',\r\n      doDELETE: 'doDELETE',\r\n      doGET: 'doGET',\r\n      doGETLIST: 'doGETLIST',\r\n      fromServer: 'fromServer',\r\n      withConfig: 'withConfig',\r\n      withHttpConfig: 'withHttpConfig',\r\n      singleOne: 'singleOne',\r\n      plain: 'plain',\r\n      save: 'save',\r\n      restangularized: 'restangularized'\r\n    };\r\n    object.setRestangularFields = function(resFields) {\r\n      config.restangularFields =\r\n        _.extend(config.restangularFields, resFields);\r\n      return this;\r\n    };\r\n\r\n    config.isRestangularized = function(obj) {\r\n      return !!obj[config.restangularFields.restangularized];\r\n    };\r\n\r\n    config.setFieldToElem = function(field, elem, value) {\r\n      var properties = field.split('.');\r\n      var idValue = elem;\r\n      _.each(_.initial(properties), function(prop) {\r\n        idValue[prop] = {};\r\n        idValue = idValue[prop];\r\n      });\r\n      idValue[_.last(properties)] = value;\r\n      return this;\r\n    };\r\n\r\n    config.getFieldFromElem = function(field, elem) {\r\n      var properties = field.split('.');\r\n      var idValue = elem;\r\n      _.each(properties, function(prop) {\r\n        if (idValue) {\r\n          idValue = idValue[prop];\r\n        }\r\n      });\r\n      return angular.copy(idValue);\r\n    };\r\n\r\n    config.setIdToElem = function(elem, id /*, route */) {\r\n      config.setFieldToElem(config.restangularFields.id, elem, id);\r\n      return this;\r\n    };\r\n\r\n    config.getIdFromElem = function(elem) {\r\n      return config.getFieldFromElem(config.restangularFields.id, elem);\r\n    };\r\n\r\n    config.isValidId = function(elemId) {\r\n      return '' !== elemId && !_.isUndefined(elemId) && !_.isNull(elemId);\r\n    };\r\n\r\n    config.setUrlToElem = function(elem, url /*, route */) {\r\n      config.setFieldToElem(config.restangularFields.selfLink, elem, url);\r\n      return this;\r\n    };\r\n\r\n    config.getUrlFromElem = function(elem) {\r\n      return config.getFieldFromElem(config.restangularFields.selfLink, elem);\r\n    };\r\n\r\n    config.useCannonicalId = _.isUndefined(config.useCannonicalId) ? false : config.useCannonicalId;\r\n    object.setUseCannonicalId = function(value) {\r\n      config.useCannonicalId = value;\r\n      return this;\r\n    };\r\n\r\n    config.getCannonicalIdFromElem = function(elem) {\r\n      var cannonicalId = elem[config.restangularFields.cannonicalId];\r\n      var actualId = config.isValidId(cannonicalId) ? cannonicalId : config.getIdFromElem(elem);\r\n      return actualId;\r\n    };\r\n\r\n    /**\r\n     * Sets the Response parser. This is used in case your response isn't directly the data.\r\n     * For example if you have a response like {meta: {'meta'}, data: {name: 'Gonto'}}\r\n     * you can extract this data which is the one that needs wrapping\r\n     *\r\n     * The ResponseExtractor is a function that receives the response and the method executed.\r\n     */\r\n\r\n    config.responseInterceptors = config.responseInterceptors || [];\r\n\r\n    config.defaultResponseInterceptor = function(data /*, operation, what, url, response, deferred */) {\r\n      return data;\r\n    };\r\n\r\n    config.responseExtractor = function(data, operation, what, url, response, deferred) {\r\n      var interceptors = angular.copy(config.responseInterceptors);\r\n      interceptors.push(config.defaultResponseInterceptor);\r\n      var theData = data;\r\n      _.each(interceptors, function(interceptor) {\r\n        theData = interceptor(theData, operation,\r\n          what, url, response, deferred);\r\n      });\r\n      return theData;\r\n    };\r\n\r\n    object.addResponseInterceptor = function(extractor) {\r\n      config.responseInterceptors.push(extractor);\r\n      return this;\r\n    };\r\n\r\n    config.errorInterceptors = config.errorInterceptors || [];\r\n    object.addErrorInterceptor = function(interceptor) {\r\n      config.errorInterceptors.push(interceptor);\r\n      return this;\r\n    };\r\n\r\n    object.setResponseInterceptor = object.addResponseInterceptor;\r\n    object.setResponseExtractor = object.addResponseInterceptor;\r\n    object.setErrorInterceptor = object.addErrorInterceptor;\r\n\r\n    /**\r\n     * Response interceptor is called just before resolving promises.\r\n     */\r\n\r\n\r\n    /**\r\n     * Request interceptor is called before sending an object to the server.\r\n     */\r\n    config.requestInterceptors = config.requestInterceptors || [];\r\n\r\n    config.defaultInterceptor = function(element, operation, path, url, headers, params, httpConfig) {\r\n      return {\r\n        element: element,\r\n        headers: headers,\r\n        params: params,\r\n        httpConfig: httpConfig\r\n      };\r\n    };\r\n\r\n    config.fullRequestInterceptor = function(element, operation, path, url, headers, params, httpConfig) {\r\n      var interceptors = angular.copy(config.requestInterceptors);\r\n      var defaultRequest = config.defaultInterceptor(element, operation, path, url, headers, params, httpConfig);\r\n      return _.reduce(interceptors, function(request, interceptor) {\r\n        return _.extend(request, interceptor(request.element, operation,\r\n          path, url, request.headers, request.params, request.httpConfig));\r\n      }, defaultRequest);\r\n    };\r\n\r\n    object.addRequestInterceptor = function(interceptor) {\r\n      config.requestInterceptors.push(function(elem, operation, path, url, headers, params, httpConfig) {\r\n        return {\r\n          headers: headers,\r\n          params: params,\r\n          element: interceptor(elem, operation, path, url),\r\n          httpConfig: httpConfig\r\n        };\r\n      });\r\n      return this;\r\n    };\r\n\r\n    object.setRequestInterceptor = object.addRequestInterceptor;\r\n\r\n    object.addFullRequestInterceptor = function(interceptor) {\r\n      config.requestInterceptors.push(interceptor);\r\n      return this;\r\n    };\r\n\r\n    object.setFullRequestInterceptor = object.addFullRequestInterceptor;\r\n\r\n    config.onBeforeElemRestangularized = config.onBeforeElemRestangularized || function(elem) {\r\n      return elem;\r\n    };\r\n    object.setOnBeforeElemRestangularized = function(post) {\r\n      config.onBeforeElemRestangularized = post;\r\n      return this;\r\n    };\r\n\r\n    object.setRestangularizePromiseInterceptor = function(interceptor) {\r\n      config.restangularizePromiseInterceptor = interceptor;\r\n      return this;\r\n    };\r\n\r\n    /**\r\n     * This method is called after an element has been \"Restangularized\".\r\n     *\r\n     * It receives the element, a boolean indicating if it's an element or a collection\r\n     * and the name of the model\r\n     *\r\n     */\r\n    config.onElemRestangularized = config.onElemRestangularized || function(elem) {\r\n      return elem;\r\n    };\r\n    object.setOnElemRestangularized = function(post) {\r\n      config.onElemRestangularized = post;\r\n      return this;\r\n    };\r\n\r\n    config.shouldSaveParent = config.shouldSaveParent || function() {\r\n      return true;\r\n    };\r\n    object.setParentless = function(values) {\r\n      if (_.isArray(values)) {\r\n        config.shouldSaveParent = function(route) {\r\n          return !_.includes(values, route);\r\n        };\r\n      } else if (_.isBoolean(values)) {\r\n        config.shouldSaveParent = function() {\r\n          return !values;\r\n        };\r\n      }\r\n      return this;\r\n    };\r\n\r\n    /**\r\n     * This lets you set a suffix to every request.\r\n     *\r\n     * For example, if your api requires that for JSon requests you do /users/123.json, you can set that\r\n     * in here.\r\n     *\r\n     *\r\n     * By default, the suffix is null\r\n     */\r\n    config.suffix = _.isUndefined(config.suffix) ? null : config.suffix;\r\n    object.setRequestSuffix = function(newSuffix) {\r\n      config.suffix = newSuffix;\r\n      return this;\r\n    };\r\n\r\n    /**\r\n     * Add element transformers for certain routes.\r\n     */\r\n    config.transformers = config.transformers || {};\r\n    object.addElementTransformer = function(type, secondArg, thirdArg) {\r\n      var isCollection = null;\r\n      var transformer = null;\r\n      if (arguments.length === 2) {\r\n        transformer = secondArg;\r\n      } else {\r\n        transformer = thirdArg;\r\n        isCollection = secondArg;\r\n      }\r\n\r\n      var typeTransformers = config.transformers[type];\r\n      if (!typeTransformers) {\r\n        typeTransformers = config.transformers[type] = [];\r\n      }\r\n\r\n      typeTransformers.push(function(coll, elem) {\r\n        if (_.isNull(isCollection) || (coll === isCollection)) {\r\n          return transformer(elem);\r\n        }\r\n        return elem;\r\n      });\r\n\r\n      return object;\r\n    };\r\n\r\n    object.extendCollection = function(route, fn) {\r\n      return object.addElementTransformer(route, true, fn);\r\n    };\r\n\r\n    object.extendModel = function(route, fn) {\r\n      return object.addElementTransformer(route, false, fn);\r\n    };\r\n\r\n    config.transformElem = function(elem, isCollection, route, Restangular, force) {\r\n      if (!force && !config.transformLocalElements && !elem[config.restangularFields.fromServer]) {\r\n        return elem;\r\n      }\r\n      var typeTransformers = config.transformers[route];\r\n      var changedElem = elem;\r\n      if (typeTransformers) {\r\n        _.each(typeTransformers, function(transformer) {\r\n          changedElem = transformer(isCollection, changedElem);\r\n        });\r\n      }\r\n      return config.onElemRestangularized(changedElem, isCollection, route, Restangular);\r\n    };\r\n\r\n    config.transformLocalElements = _.isUndefined(config.transformLocalElements) ?\r\n      false :\r\n      config.transformLocalElements;\r\n\r\n    object.setTransformOnlyServerElements = function(active) {\r\n      config.transformLocalElements = !active;\r\n    };\r\n\r\n    config.fullResponse = _.isUndefined(config.fullResponse) ? false : config.fullResponse;\r\n    object.setFullResponse = function(full) {\r\n      config.fullResponse = full;\r\n      return this;\r\n    };\r\n\r\n\r\n    //Internal values and functions\r\n    config.urlCreatorFactory = {};\r\n\r\n    /**\r\n     * Base URL Creator. Base prototype for everything related to it\r\n     **/\r\n\r\n     var BaseCreator = function() {\r\n     };\r\n\r\n     BaseCreator.prototype.setConfig = function(config) {\r\n       this.config = config;\r\n       return this;\r\n     };\r\n\r\n     BaseCreator.prototype.parentsArray = function(current) {\r\n      var parents = [];\r\n      while(current) {\r\n        parents.push(current);\r\n        current = current[this.config.restangularFields.parentResource];\r\n      }\r\n      return parents.reverse();\r\n    };\r\n\r\n    function RestangularResource(config, $http, url, configurer) {\r\n      var resource = {};\r\n      _.each(_.keys(configurer), function(key) {\r\n        var value = configurer[key];\r\n\r\n        // Add default parameters\r\n        value.params = _.extend({}, value.params, config.defaultRequestParams[value.method.toLowerCase()]);\r\n        // We don't want the ? if no params are there\r\n        if (_.isEmpty(value.params)) {\r\n          delete value.params;\r\n        }\r\n\r\n        if (config.isSafe(value.method)) {\r\n\r\n          resource[key] = function() {\r\n            return $http(_.extend(value, {\r\n              url: url\r\n            }));\r\n          };\r\n\r\n        } else {\r\n\r\n          resource[key] = function(data) {\r\n            return $http(_.extend(value, {\r\n              url: url,\r\n              data: data\r\n            }));\r\n          };\r\n\r\n        }\r\n      });\r\n\r\n      return resource;\r\n    }\r\n\r\n    BaseCreator.prototype.resource = function(current, $http, localHttpConfig, callHeaders, callParams, what, etag,operation) {\r\n\r\n      var params = _.defaults(callParams || {}, this.config.defaultRequestParams.common);\r\n      var headers = _.defaults(callHeaders || {}, this.config.defaultHeaders);\r\n\r\n      if (etag) {\r\n        if (!config.isSafe(operation)) {\r\n          headers['If-Match'] = etag;\r\n        } else {\r\n          headers['If-None-Match'] = etag;\r\n        }\r\n      }\r\n\r\n      var url = this.base(current);\r\n\r\n      if (what) {\r\n        var add = '';\r\n        if (!/\\/$/.test(url)) {\r\n          add += '/';\r\n        }\r\n        add += what;\r\n        url += add;\r\n      }\r\n\r\n      if (this.config.suffix &&\r\n        url.indexOf(this.config.suffix, url.length - this.config.suffix.length) === -1 &&\r\n        !this.config.getUrlFromElem(current)) {\r\n          url += this.config.suffix;\r\n      }\r\n\r\n      current[this.config.restangularFields.httpConfig] = undefined;\r\n\r\n      return RestangularResource(this.config, $http, url, {\r\n        getList: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'GET',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        get: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'GET',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        jsonp: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'jsonp',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        put: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'PUT',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        post: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'POST',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        remove: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'DELETE',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        head: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'HEAD',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        trace: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'TRACE',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        options: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'OPTIONS',\r\n          params: params,\r\n          headers: headers}),\r\n\r\n        patch: this.config.withHttpValues(localHttpConfig,\r\n          {method: 'PATCH',\r\n          params: params,\r\n          headers: headers})\r\n      });\r\n    };\r\n\r\n    /**\r\n     * This is the Path URL creator. It uses Path to show Hierarchy in the Rest API.\r\n     * This means that if you have an Account that then has a set of Buildings, a URL to a building\r\n     * would be /accounts/123/buildings/456\r\n    **/\r\n    var Path = function() {\r\n    };\r\n\r\n    Path.prototype = new BaseCreator();\r\n\r\n    Path.prototype.normalizeUrl = function (url){\r\n      var parts = /(http[s]?:\\/\\/)?(.*)?/.exec(url);\r\n      parts[2] = parts[2].replace(/[\\\\\\/]+/g, '/');\r\n      return (typeof parts[1] !== 'undefined')? parts[1] + parts[2] : parts[2];\r\n    };\r\n\r\n    Path.prototype.base = function(current) {\r\n      var __this = this;\r\n      return  _.reduce(this.parentsArray(current), function(acum, elem) {\r\n        var elemUrl;\r\n        var elemSelfLink = __this.config.getUrlFromElem(elem);\r\n        if (elemSelfLink) {\r\n          if (__this.config.isAbsoluteUrl(elemSelfLink)) {\r\n            return elemSelfLink;\r\n          } else {\r\n            elemUrl = elemSelfLink;\r\n          }\r\n        } else {\r\n          elemUrl = elem[__this.config.restangularFields.route];\r\n\r\n          if (elem[__this.config.restangularFields.restangularCollection]) {\r\n            var ids = elem[__this.config.restangularFields.ids];\r\n            if (ids) {\r\n              elemUrl += '/' + ids.join(',');\r\n            }\r\n          } else {\r\n            var elemId;\r\n            if (__this.config.useCannonicalId) {\r\n              elemId = __this.config.getCannonicalIdFromElem(elem);\r\n            } else {\r\n              elemId = __this.config.getIdFromElem(elem);\r\n            }\r\n\r\n            if (config.isValidId(elemId) && !elem.singleOne) {\r\n              elemUrl += '/' + (__this.config.encodeIds ? encodeURIComponent(elemId) : elemId);\r\n            }\r\n          }\r\n        }\r\n        acum = acum.replace(/\\/$/, '') + '/' + elemUrl;\r\n        return __this.normalizeUrl(acum);\r\n\r\n      }, this.config.baseUrl);\r\n    };\r\n\r\n\r\n\r\n    Path.prototype.fetchUrl = function(current, what) {\r\n      var baseUrl = this.base(current);\r\n      if (what) {\r\n        baseUrl += '/' + what;\r\n      }\r\n      return baseUrl;\r\n    };\r\n\r\n    Path.prototype.fetchRequestedUrl = function(current, what) {\r\n      var url = this.fetchUrl(current, what);\r\n      var params = current[config.restangularFields.reqParams];\r\n\r\n      // From here on and until the end of fetchRequestedUrl,\r\n      // the code has been kindly borrowed from angular.js\r\n      // The reason for such code bloating is coherence:\r\n      //   If the user were to use this for cache management, the\r\n      //   serialization of parameters would need to be identical\r\n      //   to the one done by angular for cache keys to match.\r\n      function sortedKeys(obj) {\r\n        var keys = [];\r\n        for (var key in obj) {\r\n          if (obj.hasOwnProperty(key)) {\r\n            keys.push(key);\r\n          }\r\n        }\r\n        return keys.sort();\r\n      }\r\n\r\n      function forEachSorted(obj, iterator, context) {\r\n        var keys = sortedKeys(obj);\r\n        for ( var i = 0; i < keys.length; i++) {\r\n          iterator.call(context, obj[keys[i]], keys[i]);\r\n        }\r\n        return keys;\r\n      }\r\n\r\n      function encodeUriQuery(val, pctEncodeSpaces) {\r\n        return encodeURIComponent(val).\r\n                   replace(/%40/gi, '@').\r\n                   replace(/%3A/gi, ':').\r\n                   replace(/%24/g, '$').\r\n                   replace(/%2C/gi, ',').\r\n                   replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\r\n      }\r\n\r\n      if (!params) { return url + (this.config.suffix || ''); }\r\n\r\n      var parts = [];\r\n      forEachSorted(params, function(value, key) {\r\n        if (value === null || value === undefined) { return; }\r\n        if (!angular.isArray(value)) { value = [value]; }\r\n\r\n        angular.forEach(value, function(v) {\r\n          if (angular.isObject(v)) {\r\n            v = angular.toJson(v);\r\n          }\r\n          parts.push(encodeUriQuery(key) + '=' + encodeUriQuery(v));\r\n        });\r\n      });\r\n\r\n      return url + (this.config.suffix || '') + ((url.indexOf('?') === -1) ? '?' : '&') + parts.join('&');\r\n    };\r\n\r\n    config.urlCreatorFactory.path = Path;\r\n  };\r\n\r\n  var globalConfiguration = {};\r\n\r\n  Configurer.init(this, globalConfiguration);\r\n\r\n\r\n\r\n  this.$get = ['$http', '$q', function($http, $q) {\r\n\r\n    function createServiceForConfiguration(config) {\r\n      var service = {};\r\n\r\n      var urlHandler = new config.urlCreatorFactory[config.urlCreator]();\r\n      urlHandler.setConfig(config);\r\n\r\n      function restangularizeBase(parent, elem, route, reqParams, fromServer) {\r\n        elem[config.restangularFields.route] = route;\r\n        elem[config.restangularFields.getRestangularUrl] = _.bind(urlHandler.fetchUrl, urlHandler, elem);\r\n        elem[config.restangularFields.getRequestedUrl] = _.bind(urlHandler.fetchRequestedUrl, urlHandler, elem);\r\n        elem[config.restangularFields.addRestangularMethod] = _.bind(addRestangularMethodFunction, elem);\r\n        elem[config.restangularFields.clone] = _.bind(copyRestangularizedElement, elem, elem);\r\n        elem[config.restangularFields.reqParams] = _.isEmpty(reqParams) ? null : reqParams;\r\n        elem[config.restangularFields.withHttpConfig] = _.bind(withHttpConfig, elem);\r\n        elem[config.restangularFields.plain] = _.bind(stripRestangular, elem, elem);\r\n\r\n        // Tag element as restangularized\r\n        elem[config.restangularFields.restangularized] = true;\r\n\r\n        // RequestLess connection\r\n        elem[config.restangularFields.one] = _.bind(one, elem, elem);\r\n        elem[config.restangularFields.all] = _.bind(all, elem, elem);\r\n        elem[config.restangularFields.several] = _.bind(several, elem, elem);\r\n        elem[config.restangularFields.oneUrl] = _.bind(oneUrl, elem, elem);\r\n        elem[config.restangularFields.allUrl] = _.bind(allUrl, elem, elem);\r\n\r\n        elem[config.restangularFields.fromServer] = !!fromServer;\r\n\r\n        if (parent && config.shouldSaveParent(route)) {\r\n          var parentId = config.getIdFromElem(parent);\r\n          var parentUrl = config.getUrlFromElem(parent);\r\n\r\n          var restangularFieldsForParent = _.union(\r\n            _.values( _.pick(config.restangularFields, ['route', 'singleOne', 'parentResource']) ),\r\n            config.extraFields\r\n          );\r\n          var parentResource = _.pick(parent, restangularFieldsForParent);\r\n\r\n          if (config.isValidId(parentId)) {\r\n            config.setIdToElem(parentResource, parentId, route);\r\n          }\r\n          if (config.isValidId(parentUrl)) {\r\n            config.setUrlToElem(parentResource, parentUrl, route);\r\n          }\r\n\r\n          elem[config.restangularFields.parentResource] = parentResource;\r\n        } else {\r\n          elem[config.restangularFields.parentResource] = null;\r\n        }\r\n        return elem;\r\n      }\r\n\r\n      function one(parent, route, id, singleOne) {\r\n        var error;\r\n        if (_.isNumber(route) || _.isNumber(parent)) {\r\n          error = 'You\\'re creating a Restangular entity with the number ';\r\n          error += 'instead of the route or the parent. For example, you can\\'t call .one(12).';\r\n          throw new Error(error);\r\n        }\r\n        if (_.isUndefined(route)) {\r\n          error = 'You\\'re creating a Restangular entity either without the path. ';\r\n          error += 'For example you can\\'t call .one(). Please check if your arguments are valid.';\r\n          throw new Error(error);\r\n        }\r\n        var elem = {};\r\n        config.setIdToElem(elem, id, route);\r\n        config.setFieldToElem(config.restangularFields.singleOne, elem, singleOne);\r\n        return restangularizeElem(parent, elem , route, false);\r\n      }\r\n\r\n\r\n      function all(parent, route) {\r\n        return restangularizeCollection(parent, [] , route, false);\r\n      }\r\n\r\n      function several(parent, route /*, ids */) {\r\n        var collection = [];\r\n        collection[config.restangularFields.ids] = Array.prototype.splice.call(arguments, 2);\r\n        return restangularizeCollection(parent, collection , route, false);\r\n      }\r\n\r\n      function oneUrl(parent, route, url) {\r\n        if (!route) {\r\n          throw new Error('Route is mandatory when creating new Restangular objects.');\r\n        }\r\n        var elem = {};\r\n        config.setUrlToElem(elem, url, route);\r\n        return restangularizeElem(parent, elem , route, false);\r\n      }\r\n\r\n\r\n      function allUrl(parent, route, url) {\r\n        if (!route) {\r\n          throw new Error('Route is mandatory when creating new Restangular objects.');\r\n        }\r\n        var elem = {};\r\n        config.setUrlToElem(elem, url, route);\r\n        return restangularizeCollection(parent, elem , route, false);\r\n      }\r\n      // Promises\r\n      function restangularizePromise(promise, isCollection, valueToFill) {\r\n        promise.call = _.bind(promiseCall, promise);\r\n        promise.get = _.bind(promiseGet, promise);\r\n        promise[config.restangularFields.restangularCollection] = isCollection;\r\n        if (isCollection) {\r\n            promise.push = _.bind(promiseCall, promise, 'push');\r\n        }\r\n        promise.$object = valueToFill;\r\n        if (config.restangularizePromiseInterceptor) {\r\n          config.restangularizePromiseInterceptor(promise);\r\n        }\r\n        return promise;\r\n      }\r\n\r\n      function promiseCall(method) {\r\n        var deferred = $q.defer();\r\n        var callArgs = arguments;\r\n        var filledValue = {};\r\n        this.then(function(val) {\r\n          var params = Array.prototype.slice.call(callArgs, 1);\r\n          var func = val[method];\r\n          func.apply(val, params);\r\n          filledValue = val;\r\n          deferred.resolve(val);\r\n        });\r\n        return restangularizePromise(deferred.promise, this[config.restangularFields.restangularCollection], filledValue);\r\n      }\r\n\r\n      function promiseGet(what) {\r\n        var deferred = $q.defer();\r\n        var filledValue = {};\r\n        this.then(function(val) {\r\n          filledValue = val[what];\r\n          deferred.resolve(filledValue);\r\n        });\r\n        return restangularizePromise(deferred.promise, this[config.restangularFields.restangularCollection], filledValue);\r\n      }\r\n\r\n      function resolvePromise(deferred, response, data, filledValue) {\r\n        _.extend(filledValue, data);\r\n\r\n        // Trigger the full response interceptor.\r\n        if (config.fullResponse) {\r\n          return deferred.resolve(_.extend(response, {\r\n            data: data\r\n          }));\r\n        } else {\r\n          deferred.resolve(data);\r\n        }\r\n      }\r\n\r\n\r\n      // Elements\r\n      function stripRestangular(elem) {\r\n        if (_.isArray(elem)) {\r\n          var array = [];\r\n          _.each(elem, function(value) {\r\n              array.push(config.isRestangularized(value) ?  stripRestangular(value) : value);\r\n          });\r\n          return array;\r\n        } else {\r\n          return _.omit(elem, _.values(_.omit(config.restangularFields, 'id')));\r\n        }\r\n      }\r\n\r\n      function addCustomOperation(elem) {\r\n        elem[config.restangularFields.customOperation] = _.bind(customFunction, elem);\r\n        _.each(['put', 'post', 'get', 'delete'], function(oper) {\r\n          _.each(['do', 'custom'], function(alias) {\r\n            var callOperation = oper === 'delete' ? 'remove' : oper;\r\n            var name = alias + oper.toUpperCase();\r\n            var callFunction;\r\n\r\n            if (callOperation !== 'put' && callOperation !== 'post') {\r\n              callFunction = customFunction;\r\n            } else {\r\n              callFunction = function(operation, elem, path, params, headers) {\r\n                return _.bind(customFunction, this)(operation, path, params, headers, elem);\r\n              };\r\n            }\r\n            elem[name] = _.bind(callFunction, elem, callOperation);\r\n          });\r\n        });\r\n        elem[config.restangularFields.customGETLIST] = _.bind(fetchFunction, elem);\r\n        elem[config.restangularFields.doGETLIST] = elem[config.restangularFields.customGETLIST];\r\n      }\r\n\r\n      function copyRestangularizedElement(fromElement, toElement) {\r\n        var copiedElement = angular.copy(fromElement, toElement);\r\n        return restangularizeElem(copiedElement[config.restangularFields.parentResource],\r\n                copiedElement, copiedElement[config.restangularFields.route], true);\r\n      }\r\n\r\n      function restangularizeElem(parent, element, route, fromServer, collection, reqParams) {\r\n        var elem = config.onBeforeElemRestangularized(element, false, route);\r\n\r\n        var localElem = restangularizeBase(parent, elem, route, reqParams, fromServer);\r\n\r\n        if (config.useCannonicalId) {\r\n          localElem[config.restangularFields.cannonicalId] = config.getIdFromElem(localElem);\r\n        }\r\n\r\n        if (collection) {\r\n          localElem[config.restangularFields.getParentList] = function() {\r\n            return collection;\r\n          };\r\n        }\r\n\r\n        localElem[config.restangularFields.restangularCollection] = false;\r\n        localElem[config.restangularFields.get] = _.bind(getFunction, localElem);\r\n        localElem[config.restangularFields.getList] = _.bind(fetchFunction, localElem);\r\n        localElem[config.restangularFields.put] = _.bind(putFunction, localElem);\r\n        localElem[config.restangularFields.post] = _.bind(postFunction, localElem);\r\n        localElem[config.restangularFields.remove] = _.bind(deleteFunction, localElem);\r\n        localElem[config.restangularFields.head] = _.bind(headFunction, localElem);\r\n        localElem[config.restangularFields.trace] = _.bind(traceFunction, localElem);\r\n        localElem[config.restangularFields.options] = _.bind(optionsFunction, localElem);\r\n        localElem[config.restangularFields.patch] = _.bind(patchFunction, localElem);\r\n        localElem[config.restangularFields.save] = _.bind(save, localElem);\r\n\r\n        addCustomOperation(localElem);\r\n        return config.transformElem(localElem, false, route, service, true);\r\n      }\r\n\r\n      function restangularizeCollection(parent, element, route, fromServer, reqParams) {\r\n        var elem = config.onBeforeElemRestangularized(element, true, route);\r\n\r\n        var localElem = restangularizeBase(parent, elem, route, reqParams, fromServer);\r\n        localElem[config.restangularFields.restangularCollection] = true;\r\n        localElem[config.restangularFields.post] = _.bind(postFunction, localElem, null);\r\n        localElem[config.restangularFields.remove] = _.bind(deleteFunction, localElem);\r\n        localElem[config.restangularFields.head] = _.bind(headFunction, localElem);\r\n        localElem[config.restangularFields.trace] = _.bind(traceFunction, localElem);\r\n        localElem[config.restangularFields.putElement] = _.bind(putElementFunction, localElem);\r\n        localElem[config.restangularFields.options] = _.bind(optionsFunction, localElem);\r\n        localElem[config.restangularFields.patch] = _.bind(patchFunction, localElem);\r\n        localElem[config.restangularFields.get] = _.bind(getById, localElem);\r\n        localElem[config.restangularFields.getList] = _.bind(fetchFunction, localElem, null);\r\n\r\n        addCustomOperation(localElem);\r\n        return config.transformElem(localElem, true, route, service, true);\r\n      }\r\n\r\n      function restangularizeCollectionAndElements(parent, element, route) {\r\n        var collection = restangularizeCollection(parent, element, route, false);\r\n        _.each(collection, function(elem) {\r\n          restangularizeElem(parent, elem, route, false);\r\n        });\r\n        return collection;\r\n      }\r\n\r\n      function getById(id, reqParams, headers){\r\n        return this.customGET(id.toString(), reqParams, headers);\r\n      }\r\n\r\n      function putElementFunction(idx, params, headers) {\r\n        var __this = this;\r\n        var elemToPut = this[idx];\r\n        var deferred = $q.defer();\r\n        var filledArray = [];\r\n        filledArray = config.transformElem(filledArray, true, elemToPut[config.restangularFields.route], service);\r\n        elemToPut.put(params, headers).then(function(serverElem) {\r\n          var newArray = copyRestangularizedElement(__this);\r\n          newArray[idx] = serverElem;\r\n          filledArray = newArray;\r\n          deferred.resolve(newArray);\r\n        }, function(response) {\r\n          deferred.reject(response);\r\n        });\r\n\r\n        return restangularizePromise(deferred.promise, true, filledArray);\r\n      }\r\n\r\n      function parseResponse(resData, operation, route, fetchUrl, response, deferred) {\r\n        var data = config.responseExtractor(resData, operation, route, fetchUrl, response, deferred);\r\n        var etag = response.headers('ETag');\r\n        if (data && etag) {\r\n          data[config.restangularFields.etag] = etag;\r\n        }\r\n        return data;\r\n      }\r\n\r\n\r\n      function fetchFunction(what, reqParams, headers) {\r\n        var __this = this;\r\n        var deferred = $q.defer();\r\n        var operation = 'getList';\r\n        var url = urlHandler.fetchUrl(this, what);\r\n        var whatFetched = what || __this[config.restangularFields.route];\r\n\r\n        var request = config.fullRequestInterceptor(null, operation,\r\n            whatFetched, url, headers || {}, reqParams || {}, this[config.restangularFields.httpConfig] || {});\r\n\r\n        var filledArray = [];\r\n        filledArray = config.transformElem(filledArray, true, whatFetched, service);\r\n\r\n        var method = 'getList';\r\n\r\n        if (config.jsonp) {\r\n          method = 'jsonp';\r\n        }\r\n\r\n        var okCallback = function(response) {\r\n          var resData = response.data;\r\n          var fullParams = response.config.params;\r\n          var data = parseResponse(resData, operation, whatFetched, url, response, deferred);\r\n\r\n          // support empty response for getList() calls (some APIs respond with 204 and empty body)\r\n          if (_.isUndefined(data) || '' === data) {\r\n            data = [];\r\n          }\r\n          if (!_.isArray(data)) {\r\n            throw new Error('Response for getList SHOULD be an array and not an object or something else');\r\n          }\r\n          var processedData = _.map(data, function(elem) {\r\n            if (!__this[config.restangularFields.restangularCollection]) {\r\n              return restangularizeElem(__this, elem, what, true, data);\r\n            } else {\r\n              return restangularizeElem(__this[config.restangularFields.parentResource],\r\n                elem, __this[config.restangularFields.route], true, data);\r\n            }\r\n          });\r\n\r\n          processedData = _.extend(data, processedData);\r\n\r\n          if (!__this[config.restangularFields.restangularCollection]) {\r\n            resolvePromise(\r\n              deferred,\r\n              response,\r\n              restangularizeCollection(\r\n                __this,\r\n                processedData,\r\n                what,\r\n                true,\r\n                fullParams\r\n              ),\r\n              filledArray\r\n            );\r\n          } else {\r\n            resolvePromise(\r\n              deferred,\r\n              response,\r\n              restangularizeCollection(\r\n                __this[config.restangularFields.parentResource],\r\n                processedData,\r\n                __this[config.restangularFields.route],\r\n                true,\r\n                fullParams\r\n              ),\r\n              filledArray\r\n            );\r\n          }\r\n        };\r\n\r\n        urlHandler.resource(this, $http, request.httpConfig, request.headers, request.params, what,\r\n                this[config.restangularFields.etag], operation)[method]().then(okCallback, function error(response) {\r\n          if (response.status === 304 && __this[config.restangularFields.restangularCollection]) {\r\n            resolvePromise(deferred, response, __this, filledArray);\r\n          } else if ( _.every(config.errorInterceptors, function(cb) { return cb(response, deferred, okCallback) !== false; }) ) {\r\n            // triggered if no callback returns false\r\n            deferred.reject(response);\r\n          }\r\n        });\r\n\r\n        return restangularizePromise(deferred.promise, true, filledArray);\r\n      }\r\n\r\n      function withHttpConfig(httpConfig) {\r\n        this[config.restangularFields.httpConfig] = httpConfig;\r\n        return this;\r\n      }\r\n\r\n      function save(params, headers) {\r\n        if (this[config.restangularFields.fromServer]) {\r\n          return this[config.restangularFields.put](params, headers);\r\n        } else {\r\n          return _.bind(elemFunction, this)('post', undefined, params, undefined, headers);\r\n        }\r\n      }\r\n\r\n      function elemFunction(operation, what, params, obj, headers) {\r\n        var __this = this;\r\n        var deferred = $q.defer();\r\n        var resParams = params || {};\r\n        var route = what || this[config.restangularFields.route];\r\n        var fetchUrl = urlHandler.fetchUrl(this, what);\r\n\r\n        var callObj = obj || this;\r\n        // fallback to etag on restangular object (since for custom methods we probably don't explicitly specify the etag field)\r\n        var etag = callObj[config.restangularFields.etag] || (operation !== 'post' ? this[config.restangularFields.etag] : null);\r\n\r\n        if (_.isObject(callObj) && config.isRestangularized(callObj)) {\r\n          callObj = stripRestangular(callObj);\r\n        }\r\n        var request = config.fullRequestInterceptor(callObj, operation, route, fetchUrl,\r\n          headers || {}, resParams || {}, this[config.restangularFields.httpConfig] || {});\r\n\r\n        var filledObject = {};\r\n        filledObject = config.transformElem(filledObject, false, route, service);\r\n\r\n        var okCallback = function(response) {\r\n          var resData = response.data;\r\n          var fullParams = response.config.params;\r\n          var elem = parseResponse(resData, operation, route, fetchUrl, response, deferred);\r\n          if (elem) {\r\n            var data;\r\n            if (operation === 'post' && !__this[config.restangularFields.restangularCollection]) {\r\n              data = restangularizeElem(\r\n                __this[config.restangularFields.parentResource],\r\n                elem,\r\n                route,\r\n                true,\r\n                null,\r\n                fullParams\r\n              );\r\n              resolvePromise(deferred, response, data, filledObject);\r\n            } else {\r\n              data = restangularizeElem(\r\n                __this[config.restangularFields.parentResource],\r\n                elem,\r\n                __this[config.restangularFields.route],\r\n                true,\r\n                null,\r\n                fullParams\r\n              );\r\n\r\n              data[config.restangularFields.singleOne] = __this[config.restangularFields.singleOne];\r\n              resolvePromise(deferred, response, data, filledObject);\r\n            }\r\n\r\n          } else {\r\n            resolvePromise(deferred, response, undefined, filledObject);\r\n          }\r\n        };\r\n\r\n        var errorCallback = function(response) {\r\n          if (response.status === 304 && config.isSafe(operation)) {\r\n            resolvePromise(deferred, response, __this, filledObject);\r\n          } else if ( _.every(config.errorInterceptors, function(cb) { return cb(response, deferred, okCallback) !== false; }) ) {\r\n            // triggered if no callback returns false\r\n            deferred.reject(response);\r\n          }\r\n        };\r\n        // Overriding HTTP Method\r\n        var callOperation = operation;\r\n        var callHeaders = _.extend({}, request.headers);\r\n        var isOverrideOperation = config.isOverridenMethod(operation);\r\n        if (isOverrideOperation) {\r\n          callOperation = 'post';\r\n          callHeaders = _.extend(callHeaders, {'X-HTTP-Method-Override': operation === 'remove' ? 'DELETE' : operation.toUpperCase()});\r\n        } else if (config.jsonp && callOperation === 'get') {\r\n          callOperation = 'jsonp';\r\n        }\r\n\r\n        if (config.isSafe(operation)) {\r\n          if (isOverrideOperation) {\r\n            urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\r\n              what, etag, callOperation)[callOperation]({}).then(okCallback, errorCallback);\r\n          } else {\r\n            urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\r\n              what, etag, callOperation)[callOperation]().then(okCallback, errorCallback);\r\n          }\r\n        } else {\r\n          urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\r\n            what, etag, callOperation)[callOperation](request.element).then(okCallback, errorCallback);\r\n        }\r\n\r\n        return restangularizePromise(deferred.promise, false, filledObject);\r\n      }\r\n\r\n      function getFunction(params, headers) {\r\n        return _.bind(elemFunction, this)('get', undefined, params, undefined, headers);\r\n      }\r\n\r\n      function deleteFunction(params, headers) {\r\n        return _.bind(elemFunction, this)('remove', undefined, params, undefined, headers);\r\n      }\r\n\r\n      function putFunction(params, headers) {\r\n        return _.bind(elemFunction, this)('put', undefined, params, undefined, headers);\r\n      }\r\n\r\n      function postFunction(what, elem, params, headers) {\r\n        return _.bind(elemFunction, this)('post', what, params, elem, headers);\r\n      }\r\n\r\n      function headFunction(params, headers) {\r\n        return _.bind(elemFunction, this)('head', undefined, params, undefined, headers);\r\n      }\r\n\r\n      function traceFunction(params, headers) {\r\n        return _.bind(elemFunction, this)('trace', undefined, params, undefined, headers);\r\n      }\r\n\r\n      function optionsFunction(params, headers) {\r\n        return _.bind(elemFunction, this)('options', undefined, params, undefined, headers);\r\n      }\r\n\r\n      function patchFunction(elem, params, headers) {\r\n        return _.bind(elemFunction, this)('patch', undefined, params, elem, headers);\r\n      }\r\n\r\n      function customFunction(operation, path, params, headers, elem) {\r\n        return _.bind(elemFunction, this)(operation, path, params, elem, headers);\r\n      }\r\n\r\n      function addRestangularMethodFunction(name, operation, path, defaultParams, defaultHeaders, defaultElem) {\r\n        var bindedFunction;\r\n        if (operation === 'getList') {\r\n          bindedFunction = _.bind(fetchFunction, this, path);\r\n        } else {\r\n          bindedFunction = _.bind(customFunction, this, operation, path);\r\n        }\r\n\r\n        var createdFunction = function(params, headers, elem) {\r\n          var callParams = _.defaults({\r\n            params: params,\r\n            headers: headers,\r\n            elem: elem\r\n          }, {\r\n            params: defaultParams,\r\n            headers: defaultHeaders,\r\n            elem: defaultElem\r\n          });\r\n          return bindedFunction(callParams.params, callParams.headers, callParams.elem);\r\n        };\r\n\r\n        if (config.isSafe(operation)) {\r\n          this[name] = createdFunction;\r\n        } else {\r\n          this[name] = function(elem, params, headers) {\r\n            return createdFunction(params, headers, elem);\r\n          };\r\n        }\r\n      }\r\n\r\n      function withConfigurationFunction(configurer) {\r\n        var newConfig = angular.copy(_.omit(config, 'configuration'));\r\n        Configurer.init(newConfig, newConfig);\r\n        configurer(newConfig);\r\n        return createServiceForConfiguration(newConfig);\r\n      }\r\n\r\n      function toService(route, parent) {\r\n        var knownCollectionMethods = _.values(config.restangularFields);\r\n        var serv = {};\r\n        var collection = (parent || service).all(route);\r\n        serv.one = _.bind(one, (parent || service), parent, route);\r\n        serv.post = _.bind(collection.post, collection);\r\n        serv.getList = _.bind(collection.getList, collection);\r\n\r\n        for (var prop in collection) {\r\n          if (collection.hasOwnProperty(prop) && _.isFunction(collection[prop]) && !_.includes(knownCollectionMethods, prop)) {\r\n            serv[prop] = _.bind(collection[prop], collection);\r\n          }\r\n        }\r\n\r\n        return serv;\r\n      }\r\n\r\n\r\n      Configurer.init(service, config);\r\n\r\n      service.copy = _.bind(copyRestangularizedElement, service);\r\n\r\n      service.service = _.bind(toService, service);\r\n\r\n      service.withConfig = _.bind(withConfigurationFunction, service);\r\n\r\n      service.one = _.bind(one, service, null);\r\n\r\n      service.all = _.bind(all, service, null);\r\n\r\n      service.several = _.bind(several, service, null);\r\n\r\n      service.oneUrl = _.bind(oneUrl, service, null);\r\n\r\n      service.allUrl = _.bind(allUrl, service, null);\r\n\r\n      service.stripRestangular = _.bind(stripRestangular, service);\r\n\r\n      service.restangularizeElement = _.bind(restangularizeElem, service);\r\n\r\n      service.restangularizeCollection = _.bind(restangularizeCollectionAndElements, service);\r\n\r\n      return service;\r\n    }\r\n\r\n    return createServiceForConfiguration(globalConfiguration);\r\n  }];\r\n});\r\n\r\n})();\r\n"]}