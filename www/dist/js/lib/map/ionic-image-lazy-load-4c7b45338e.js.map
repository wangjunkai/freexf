{"version":3,"sources":["ionic-image-lazy-load-4c7b45338e.js"],"names":["angular","module","directive","$rootScope","restrict","link","$scope","$element","origEvent","$onScroll","$broadcast","$document","$timeout","$ionicScrollDelegate","$compile","scope","lazyScrollResize","imageLazyBackgroundImage","imageLazySrc","$attributes","loadImage","bind","e","imageLazyLoader","loader","remove","resize","unbind","bgImg","Image","onload","style","backgroundImage","src","isInView","clientHeight","documentElement","clientWidth","imageRect","getBoundingClientRect","top","parseInt","imageLazyDistanceFromBottomToLoad","left","imageLazyDistanceFromRightToLoad","after","$watch","oldV","newV","deregistration","$on","on"],"mappings":"AAQAA,QAAQC,OAAO,oBAEfD,QAAQC,OAAO,iBAEZC,UAAU,cAAe,aACxB,SAASC,GACP,OACEC,SAAU,IACVC,KAAM,SAAUC,EAAQC,GACtB,GAAIC,GAAYF,EAAOG,SACvBH,GAAOG,UAAY,WACjBN,EAAWO,WAAW,mBAEE,kBAAdF,IACRA,UAOXN,UAAU,gBAAiB,YAAa,WAAY,uBAAwB,WAC3E,SAAUS,EAAWC,EAAUC,EAAsBC,GACnD,OACEV,SAAU,IACVW,OACEC,iBAAkB,oBAClBC,yBAA0B,4BAC1BC,aAAc,KAEhBb,KAAM,SAAUC,EAAQC,EAAUY,GA6ChC,QAASC,KAaP,GAXAb,EAASc,KAAK,OAAQ,SAAUC,GAC1BH,EAAYI,iBACdC,EAAOC,SAEsB,QAA3BnB,EAAOU,kBAETH,EAAqBa,SAEvBnB,EAASoB,OAAO,UAGqB,QAAnCrB,EAAOW,yBAAoC,CAC7C,GAAIW,GAAQ,GAAIC,MAChBD,GAAME,OAAS,WACTX,EAAYI,iBACdC,EAAOC,SAETlB,EAAS,GAAGwB,MAAMC,gBAAkB,OAASb,EAAYD,aAAe,IACzC,QAA3BZ,EAAOU,kBAETH,EAAqBa,UAGzBE,EAAMK,IAAMd,EAAYD,iBAExBX,GAAS,GAAG0B,IAAMd,EAAYD,aAIlC,QAASgB,KACP,GAAIC,GAAexB,EAAU,GAAGyB,gBAAgBD,aAC5CE,EAAc1B,EAAU,GAAGyB,gBAAgBC,YAC3CC,EAAY/B,EAAS,GAAGgC,uBAC5B,OAAQD,GAAUE,KAAO,GAAKF,EAAUE,KAAOL,EAAeM,SAAStB,EAAYuB,oCAC7EJ,EAAUK,MAAQ,GAAKL,EAAUK,MAAQN,EAAcI,SAAStB,EAAYyB,kCAhF/EzB,EAAYuB,oCACfvB,EAAYuB,kCAAoC,GAE7CvB,EAAYyB,mCACfzB,EAAYyB,iCAAmC,EAGjD,IAAIpB,EACAL,GAAYI,kBACdC,EAASV,EAAS,+EAAiFK,EAAYI,gBAAkB,0BAA0BjB,GAC3JC,EAASsC,MAAMrB,IAGjBlB,EAAOwC,OAAO,eAAgB,SAAUC,EAAMC,GACzCxB,GACDA,EAAOC,SACLN,EAAYI,kBACdC,EAASV,EAAS,+EAAiFK,EAAYI,gBAAkB,0BAA0BjB,GAC3JC,EAASsC,MAAMrB,GAEjB,IAAIyB,GAAiB3C,EAAO4C,IAAI,kBAAmB,WAE3ChB,MACFd,IACA6B,MAINrC,GAAS,WACHsB,MACFd,IACA6B,MAED,MAEL,IAAIA,GAAiB3C,EAAO4C,IAAI,kBAAmB,WAE3ChB,MACFd,IACA6B,MAiDN1C,GAAS4C,GAAG,WAAY,WACtBF,MAIFrC,EAAS,WACHsB,MACFd,IACA6B,MAED","file":"../ionic-image-lazy-load-4c7b45338e.js","sourcesContent":["/**\n * Created by PAVEI on 30/09/2014.\n * Updated by Ross Martin on 12/05/2014\n * Updated by Davide Pastore on 04/14/2015\n * Updated by Michel Vidailhet on 05/12/2015\n * Updated by Rene Korss on 11/25/2015\n */\n\nangular.module('ionicLazyLoad', []);\n\nangular.module('ionicLazyLoad')\n\n  .directive('lazyScroll', ['$rootScope',\n    function($rootScope) {\n      return {\n        restrict: 'A',\n        link: function ($scope, $element) {\n          var origEvent = $scope.$onScroll;\n          $scope.$onScroll = function () {\n            $rootScope.$broadcast('lazyScrollEvent');\n\n            if(typeof origEvent === 'function'){\n              origEvent();\n            }\n          };\n        }\n      };\n    }])\n\n  .directive('imageLazySrc', ['$document', '$timeout', '$ionicScrollDelegate', '$compile',\n    function ($document, $timeout, $ionicScrollDelegate, $compile) {\n      return {\n        restrict: 'A',\n        scope: {\n          lazyScrollResize: \"@lazyScrollResize\",\n          imageLazyBackgroundImage: \"@imageLazyBackgroundImage\",\n          imageLazySrc: \"@\"\n        },\n        link: function ($scope, $element, $attributes) {\n          if (!$attributes.imageLazyDistanceFromBottomToLoad) {\n            $attributes.imageLazyDistanceFromBottomToLoad = 0;\n          }\n          if (!$attributes.imageLazyDistanceFromRightToLoad) {\n            $attributes.imageLazyDistanceFromRightToLoad = 0;\n          }\n\n          var loader;\n          if ($attributes.imageLazyLoader) {\n            loader = $compile('<div class=\"image-loader-container\"><ion-spinner class=\"image-loader\" icon=\"' + $attributes.imageLazyLoader + '\"></ion-spinner></div>')($scope);\n            $element.after(loader);\n          }\n\n          $scope.$watch('imageLazySrc', function (oldV, newV) {\n            if(loader)\n              loader.remove();\n            if ($attributes.imageLazyLoader) {\n              loader = $compile('<div class=\"image-loader-container\"><ion-spinner class=\"image-loader\" icon=\"' + $attributes.imageLazyLoader + '\"></ion-spinner></div>')($scope);\n              $element.after(loader);\n            }\n            var deregistration = $scope.$on('lazyScrollEvent', function () {\n                //    console.log('scroll');\n                if (isInView()) {\n                  loadImage();\n                  deregistration();\n                }\n              }\n            );\n            $timeout(function () {\n              if (isInView()) {\n                loadImage();\n                deregistration();\n              }\n            }, 500);\n          });\n          var deregistration = $scope.$on('lazyScrollEvent', function () {\n              // console.log('scroll');\n              if (isInView()) {\n                loadImage();\n                deregistration();\n              }\n            }\n          );\n\n          function loadImage() {\n            //Bind \"load\" event\n            $element.bind(\"load\", function (e) {\n              if ($attributes.imageLazyLoader) {\n                loader.remove();\n              }\n              if ($scope.lazyScrollResize == \"true\") {\n                //Call the resize to recalculate the size of the screen\n                $ionicScrollDelegate.resize();\n              }\n              $element.unbind(\"load\");\n            });\n\n            if ($scope.imageLazyBackgroundImage == \"true\") {\n              var bgImg = new Image();\n              bgImg.onload = function () {\n                if ($attributes.imageLazyLoader) {\n                  loader.remove();\n                }\n                $element[0].style.backgroundImage = 'url(' + $attributes.imageLazySrc + ')'; // set style attribute on element (it will load image)\n                if ($scope.lazyScrollResize == \"true\") {\n                  //Call the resize to recalculate the size of the screen\n                  $ionicScrollDelegate.resize();\n                }\n              };\n              bgImg.src = $attributes.imageLazySrc;\n            } else {\n              $element[0].src = $attributes.imageLazySrc; // set src attribute on element (it will load image)\n            }\n          }\n\n          function isInView() {\n            var clientHeight = $document[0].documentElement.clientHeight;\n            var clientWidth = $document[0].documentElement.clientWidth;\n            var imageRect = $element[0].getBoundingClientRect();\n            return (imageRect.top >= 0 && imageRect.top <= clientHeight + parseInt($attributes.imageLazyDistanceFromBottomToLoad))\n              && (imageRect.left >= 0 && imageRect.left <= clientWidth + parseInt($attributes.imageLazyDistanceFromRightToLoad));\n          }\n\n          // bind listener\n          // listenerRemover = scrollAndResizeListener.bindListener(isInView);\n\n          // unbind event listeners if element was destroyed\n          // it happens when you change view, etc\n          $element.on('$destroy', function () {\n            deregistration();\n          });\n\n          // explicitly call scroll listener (because, some images are in viewport already and we haven't scrolled yet)\n          $timeout(function () {\n            if (isInView()) {\n              loadImage();\n              deregistration();\n            }\n          }, 500);\n        }\n      };\n    }]);\n"]}